microbenchmark(saveRDS(  df1, file = here("proc", "saveRDS_df1.rds")),   times = 10),
microbenchmark(qsave(    df1, file = here("proc", "qsave_df1.qs")),      times = 10),
microbenchmark(write.fst(df1, path = here("proc", "write.fst_df1.fst")), times = 10))
df1_results <- bind_rows(microbenchmark(write_rds(df1, path = here("proc", "df1_write_rds.rds")), times = 10),
microbenchmark(saveRDS(  df1, file = here("proc", "df1_saveRDS.rds")),   times = 10),
microbenchmark(qsave(    df1, file = here("proc", "df1_qsave.qs")),      times = 10),
microbenchmark(write.fst(df1, path = here("proc", "df1_writefst.fst")),  times = 10))
df2_results <- bind_rows(microbenchmark(write_rds(df2, path = here("proc", "df2_write_rds.rds")), times = 10),
microbenchmark(saveRDS(  df2, file = here("proc", "df2_saveRDS.rds")),   times = 10),
microbenchmark(qsave(    df2, file = here("proc", "df2_qsave.qs")),      times = 10),
microbenchmark(write.fst(df2, path = here("proc", "df2_writefst.fst")),  times = 10))
df3_results <- bind_rows(microbenchmark(write_rds(df3, path = here("proc", "df3_write_rds.rds")), times = 10),
microbenchmark(saveRDS(  df3, file = here("proc", "df3_saveRDS.rds")),   times = 10),
microbenchmark(qsave(    df3, file = here("proc", "df3_qsave.qs")),      times = 10),
microbenchmark(write.fst(df3, path = here("proc", "df3_writefst.fst")),  times = 10))
df3_results
df4_results <- bind_rows(microbenchmark(write_rds(df4, path = here("proc", "df4_write_rds.rds")), times = 10),
microbenchmark(saveRDS(  df4, file = here("proc", "df4_saveRDS.rds")),   times = 10),
microbenchmark(qsave(    df4, file = here("proc", "df4_qsave.qs")),      times = 10),
microbenchmark(write.fst(df4, path = here("proc", "df4_writefst.fst")),  times = 10))
df4_results
df5_results <- bind_rows(microbenchmark(write_rds(df5, path = here("proc", "df5_write_rds.rds")), times = 5),
microbenchmark(saveRDS(  df5, file = here("proc", "df5_saveRDS.rds")),   times = 5),
microbenchmark(qsave(    df5, file = here("proc", "df5_qsave.qs")),      times = 5),
microbenchmark(write.fst(df5, path = here("proc", "df5_writefst.fst")),  times = 5))
df5_results
df6_results <- bind_rows(microbenchmark(write_rds(df6, path = here("proc", "df6_write_rds.rds")), times = 2),
microbenchmark(saveRDS(  df6, file = here("proc", "df6_saveRDS.rds")),   times = 2),
microbenchmark(qsave(    df6, file = here("proc", "df6_qsave.qs")),      times = 2),
microbenchmark(write.fst(df6, path = here("proc", "df6_writefst.fst")),  times = 2))
# Test speed of reading objects ------------------------------------------------------
df1_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df1_write_rds.rds")), times = 10),
microbenchmark(readRDS(  file = here("proc", "df1_saveRDS.rds")),   times = 10),
microbenchmark(qread(    file = here("proc", "df1_qsave.qs")),      times = 10),
microbenchmark(read.fst(path = here("proc", "df1_writefst.fst")),  times = 10))
df7_results <- bind_rows(microbenchmark(write_rds(df7, path = here("proc", "df7_write_rds.rds")), times = 2),
microbenchmark(saveRDS(  df7, file = here("proc", "df7_saveRDS.rds")),   times = 2),
microbenchmark(qsave(    df7, file = here("proc", "df7_qsave.qs")),      times = 2),
microbenchmark(write.fst(df7, path = here("proc", "df7_writefst.fst")),  times = 2))
df8_results <- bind_rows(microbenchmark(write_rds(df8, path = here("proc", "df8_write_rds.rds")), times = 2),
microbenchmark(saveRDS(  df8, file = here("proc", "df8_saveRDS.rds")),   times = 2),
microbenchmark(qsave(    df8, file = here("proc", "df8_qsave.qs")),      times = 2),
microbenchmark(write.fst(df8, path = here("proc", "df8_writefst.fst")),  times = 2))
df8_results
df9_results <- bind_rows(microbenchmark(write_rds(df9, path = here("proc", "df9_write_rds.rds")), times = 2),
microbenchmark(saveRDS(  df9, file = here("proc", "df9_saveRDS.rds")),   times = 2),
microbenchmark(qsave(    df9, file = here("proc", "df9_qsave.qs")),      times = 2),
microbenchmark(write.fst(df9, path = here("proc", "df9_writefst.fst")),  times = 2))
# Save the results
results %>%
bind_rows(df1_results, df2_results, df3_results, df4_results, df5_results, df6_results, df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame() %>%
write_csv(results, path = here("proc", "save_results.csv"))
# Save the results
results %>%
bind_rows(df1_results, df2_results, df3_results, df4_results, df5_results, df6_results, df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame() %>%
write_csv(., path = here("proc", "save_results.csv"))
results %>%
bind_rows(df1_results, df2_results, df3_results, df4_results, df5_results, df6_results, df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame()
# Save the results
bind_rows(df1_results, df2_results, df3_results, df4_results, df5_results, df6_results, df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame() %>%
write_csv(., path = here("proc", "save_results.csv"))
bind_rows(df1_results, df2_results, df3_results, df4_results, df5_results, df6_results, df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame()
df1_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df1_write_rds.rds")),  times = 10),
microbenchmark(readRDS(  file = here("proc", "df1_saveRDS.rds")),   times = 10),
microbenchmark(qread(    file = here("proc", "df1_qsave.qs")),      times = 10),
microbenchmark(read.fst(path = here("proc", "df1_writefst.fst")),   times = 10))
df2_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df2_write_rds.rds")), times = 10),
microbenchmark(readRDS( file = here("proc", "df2_saveRDS.rds")),   times = 10),
microbenchmark(qread(   file = here("proc", "df2_qsave.qs")),      times = 10),
microbenchmark(read.fst(path = here("proc", "df2_writefst.fst")),  times = 10))
df3_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df3_write_rds.rds")), times = 10),
microbenchmark(readRDS( file = here("proc", "df3_saveRDS.rds")),   times = 10),
microbenchmark(qread(   file = here("proc", "df3_qsave.qs")),      times = 10),
microbenchmark(read.fst(path = here("proc", "df3_writefst.fst")),  times = 10))
df4_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df4_write_rds.rds")), times = 10),
microbenchmark(readRDS( file = here("proc", "df4_saveRDS.rds")),   times = 10),
microbenchmark(qread(   file = here("proc", "df4_qsave.qs")),      times = 10),
microbenchmark(read.fst(path = here("proc", "df4_writefst.fst")),  times = 10))
df4_read_results
df5_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df5_write_rds.rds")), times = 5),
microbenchmark(readRDS( file = here("proc", "df5_saveRDS.rds")),   times = 5),
microbenchmark(qread(   file = here("proc", "df5_qsave.qs")),      times = 5),
microbenchmark(read.fst(path = here("proc", "df5_writefst.fst")),  times = 5))
df6_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df6_write_rds.rds")), times = 2),
microbenchmark(readRDS( file = here("proc", "df6_saveRDS.rds")),   times = 2),
microbenchmark(qread(   file = here("proc", "df6_qsave.qs")),      times = 2),
microbenchmark(read.fst(path = here("proc", "df6_writefst.fst")),  times = 2))
df7_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df7_write_rds.rds")), times = 2),
microbenchmark(readRDS( file = here("proc", "df7_saveRDS.rds")),   times = 2),
microbenchmark(qread(   file = here("proc", "df7_qsave.qs")),      times = 2),
microbenchmark(read.fst(path = here("proc", "df7_writefst.fst")),  times = 2))
df8_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df8_write_rds.rds")), times = 2),
microbenchmark(readRDS( file = here("proc", "df8_saveRDS.rds")),   times = 2),
microbenchmark(qread(   file = here("proc", "df8_qsave.qs")),      times = 2),
microbenchmark(read.fst(ath = here("proc", "df8_writefst.fst")),   times = 2))
df8_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df8_write_rds.rds")), times = 2),
microbenchmark(readRDS( file = here("proc", "df8_saveRDS.rds")),   times = 2),
microbenchmark(qread(   file = here("proc", "df8_qsave.qs")),      times = 2),
microbenchmark(read.fst(path = here("proc", "df8_writefst.fst")), times = 2))
df9_read_results <- bind_rows(microbenchmark(read_rds(path = here("proc", "df9_write_rds.rds")), times = 2),
microbenchmark(readRDS( file = here("proc", "df9_saveRDS.rds")),   times = 2),
microbenchmark(qread(   file = here("proc", "df9_qsave.qs")),      times = 2),
microbenchmark(read.fst(path = here("proc", "df9_writefst.fst")),  times = 2))
# Save the results
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
write_csv(results, path = here("proc", "read_results.csv"))
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results)
# Save the results
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
write_csv(., path = here("proc", "read_results.csv"))
# Test the size of the saved object  --------------------------------------------------
# Make dataframe of saved csv file sizes for each data frame
csv_objects <- list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(size = file.size(file)/1e6) %>%
mutate(file = basename(file))  %>%
filter(grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
mutate(file = gsub("sample_", "", file)) %>%
filter(file != "read_results" & file != "save_results") %>%
arrange(size)
csv_objects
# Visualize ----------------------------------------------------------------------------
# Plot the time to save each object
bind_rows(df1_results, df2_results, df3_results,
df4_results, df5_results, df6_results,
df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(x.*$|\\(dat.*$", "", expr))
# Visualize ----------------------------------------------------------------------------
# Plot the time to save each object
bind_rows(df1_results, df2_results, df3_results,
df4_results, df5_results, df6_results,
df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(d.*$|\\(dat.*$", "", expr))
# Visualize ----------------------------------------------------------------------------
# Plot the time to save each object
bind_rows(df1_results, df2_results, df3_results,
df4_results, df5_results, df6_results,
df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(d.*$|\\(dat.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file") %>%
rename("csv_size_mb" = "size")%>%
mutate("csv_size_mb" = log(csv_size_mb)) %>%
ggplot(aes(x = csv_size_mb, y = mean, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
ylab("Average time to save (seconds)") +
xlab("Log of original csv size (mb)")+
theme(legend.position = "bottom",
legend.title = element_blank())
source(file = "https://raw.githubusercontent.com/skhiggins/R_guide/master/scripts/programs/set_theme.R")
source(file = "https://raw.githubusercontent.com/skhiggins/R_guide/master/scripts/programs/set_theme.R")
# Visualize ----------------------------------------------------------------------------
# Plot the time to save each object
bind_rows(df1_results, df2_results, df3_results,
df4_results, df5_results, df6_results,
df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(d.*$|\\(dat.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file") %>%
rename("csv_size_mb" = "size")%>%
mutate("csv_size_mb" = log(csv_size_mb)) %>%
ggplot(aes(x = csv_size_mb, y = mean, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
ylab("Average time to save (seconds)") +
xlab("Log of original csv size (mb)")+
theme(legend.position = "bottom",
legend.title = element_blank())
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file))
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("_d.*|_x.*$$", "", file))
# Plot the size of each saved object
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file)
# Plot the size of each saved object
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("df[1-9]_", "", file))
# Plot the size of each saved object
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("df[1-9]_", "", file))  %>%
mutate(file = gsub(".*_", "", file)) %>%
left_join(csv_objects, by = "file")
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file))
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file))
# Plot the size of each saved object
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("_.*$", "", file))
# Plot the size of each saved object
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("df[1-9]_", "", file))  %>%
mutate(file = gsub("_.*$", "", file))
# Plot the size of each saved object
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("df[1-9]_", "", file))  %>%
mutate(file = gsub("_.*$", "", file)) %>%
left_join(csv_objects, by = "file")
# Plot the size of each saved object
list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("df[1-9]_", "", file))  %>%
mutate(file = gsub("_.*$", "", file)) %>%
left_join(csv_objects, by = "file") %>%
rename("csv_original_size" = "size") %>%
mutate(csv_original_size = log(csv_original_size)) %>%
ggplot(aes(x = csv_original_size, y = saved_size, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
xlab("Log of original csv size (mb)") +
ylab("Saved size of .rds or .qs object (mb)") +
theme(legend.position = "bottom",
legend.title = element_blank())
# Plot the size of each saved object
size_saved <- list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("df[1-9]_", "", file))  %>%
mutate(file = gsub("_.*$", "", file)) %>%
left_join(csv_objects, by = "file") %>%
rename("csv_original_size" = "size") %>%
mutate(csv_original_size = log(csv_original_size)) %>%
ggplot(aes(x = csv_original_size, y = saved_size, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
xlab("Log of original csv size (mb)") +
ylab("Saved size of .rds or .qs object (mb)") +
theme(legend.position = "bottom",
legend.title = element_blank())
# Visualize ----------------------------------------------------------------------------
# Plot the time to save each object
time_saved <- bind_rows(df1_results, df2_results, df3_results,
df4_results, df5_results, df6_results,
df7_results, df8_results, df9_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(d.*$|\\(dat.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file") %>%
rename("csv_size_mb" = "size")%>%
mutate("csv_size_mb" = log(csv_size_mb)) %>%
ggplot(aes(x = csv_size_mb, y = mean, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
ylab("Average time to save (seconds)") +
xlab("Log of original csv size (mb)")+
theme(legend.position = "bottom",
legend.title = element_blank())
# Plot the time to read each object
time_read <-bind_rows(df1_results, df2_results, df3_results,
df4_results, df5_results, df6_results,
df7_results, df8_results, df9_results)  %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(d.*$|\\(dat.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file") %>%
rename("csv_size_mb" = "size")%>%
mutate("csv_size_mb" = log(csv_size_mb)) %>%
ggplot(aes(x = csv_size_mb, y = mean, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
ylab("Average time to read (seconds)") +
xlab("Log of original csv size (mb)")+
theme(legend.position = "bottom",
legend.title = element_blank())
time_read
# Plot the time to read each object
time_read <- bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(d.*$|\\(dat.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file") %>%
rename("csv_size_mb" = "size")%>%
mutate("csv_size_mb" = log(csv_size_mb)) %>%
ggplot(aes(x = csv_size_mb, y = mean, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
ylab("Average time to read (seconds)") +
xlab("Log of original csv size (mb)")+
theme(legend.position = "bottom",
legend.title = element_blank())
time_read
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(d.*$|\\(dat.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file") %>%
rename("csv_size_mb" = "size")%>%
mutate("csv_size_mb" = log(csv_size_mb))
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000)
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(p.*$|\\(f.*$", "", expr))
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(p.*$|\\(f.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(p.*$|\\(f.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object)
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(p.*$|\\(f.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file")
bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(p.*$|\\(f.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file") %>%
rename("csv_size_mb" = "size") %>%
mutate("csv_size_mb" = log(csv_size_mb)) %>%
ggplot(aes(x = csv_size_mb, y = mean, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
ylab("Average time to read (seconds)") +
xlab("Log of original csv size (mb)")+
theme(legend.position = "bottom",
legend.title = element_blank())
ggsave(filename = here("results", "figures", "time_saved.png"), plot = time_saved, device = png())
# Plot the size of each saved object
size_saved <- list.files(here("proc"), full.names = T) %>%
tibble(file = .) %>%
mutate(saved_size = file.size(file)/1e6) %>%
mutate(file = basename(file)) %>%
filter(!grepl(".csv",file)) %>%
mutate(file = gsub("\\..*$", "", file)) %>%
arrange(file) %>%
mutate(func = gsub("df[1-9]_", "", file))  %>%
mutate(file = gsub("_.*$", "", file)) %>%
left_join(csv_objects, by = "file") %>%
rename("csv_original_size" = "size") %>%
mutate(csv_original_size = log(csv_original_size)) %>%
ggplot(aes(x = csv_original_size, y = saved_size, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
xlab("Log of original csv size (mb)") +
ylab("Saved size of .rds or .qs object (mb)") +
theme(legend.position = "bottom",
legend.title = element_blank())
ggsave(filename = here("results", "figures", "size_saved.png"), plot = size_saved, device = png())
# Plot the time to read each object
time_read <- bind_rows(df1_read_results, df2_read_results, df3_read_results,
df4_read_results, df5_read_results, df6_read_results,
df7_read_results, df8_read_results, df9_read_results) %>%
summary() %>%
data.frame() %>%
transmute(expr, mean = mean/1000) %>%
mutate(func = gsub("\\(p.*$|\\(f.*$", "", expr))  %>%
mutate(object = str_extract(string = expr, "df[1-9]"))  %>%
mutate(file = object) %>%
left_join(csv_objects, by =  "file") %>%
rename("csv_size_mb" = "size") %>%
mutate("csv_size_mb" = log(csv_size_mb)) %>%
ggplot(aes(x = csv_size_mb, y = mean, group = func, color = func)) +
geom_point() +
geom_line() +
set_theme() +
ylab("Average time to read (seconds)") +
xlab("Log of original csv size (mb)")+
theme(legend.position = "bottom",
legend.title = element_blank())
ggsave(filename = here("results", "figures", "time_read.png"), plot = time_read, device = png())
